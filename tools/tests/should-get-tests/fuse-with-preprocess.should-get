

# Not satisfactory
cp ../../defs.py defs.py.tmp
echo "PRE_PROCESS_DIR='tests/data/pre_process'" >> ../../defs.py

### Use a script to verify that an external script can be triggered

# First, verify init state
!OUTPUT_FILE: ../../../algo/tests/data/results-two-clones-1-2.vidjil
!LAUNCH: touch ../../../algo/tests/data/results-two-clones-1-2.vidjil
$ Initial clones are IGH
j:  reads.germline.IGH: [950, 950]
$ Correct new germline for clone 0
j: clones[0].germline: IGH
$ Correct new germline for clone 1
j: clones[1].germline: IGH


## Apply a simple 'sed' script; IGH --> TRG
!OUTPUT_FILE: fused_prefuse_igh-to-trg.vidjil
!LAUNCH: python3 ../../fuse.py $FUSE_OPTIONS --pre igh-to-trg.sh ../../../algo/tests/data/results-two-clones-1-2.vidjil ../../../algo/tests/data/results-two-clones-1-2.vidjil -o fused_prefuse_igh-to-trg.vidjil

$ No more reads IGH 
j0: reads.germline.IGH
$ New reads IGK 
j:  reads.germline.TRG: [950, 950]
$ Correct new germline for clone 0
j: clones[0].germline: TRG
$ Correct new germline for clone 1
j: clones[1].germline: TRG


## Apply this sed script but with param
!OUTPUT_FILE: fused_prefuse_with_param.vidjil
!LAUNCH: python3 ../../fuse.py $FUSE_OPTIONS --pre "igh-to-trg.sh -l IGK" ../../../algo/tests/data/results-two-clones-1-2.vidjil ../../../algo/tests/data/results-two-clones-1-2.vidjil -o fused_prefuse_with_param.vidjil

$ No more reads IGH 
j0: reads.germline.IGH
$ New reads IGK 
j:  reads.germline.IGK: [950, 950]
$ Correct new germline for clone 0
j: clones[0].germline: IGK
$ Correct new germline for clone 1
j: clones[1].germline: IGK


## With multiple prefuse call (script replace original_names value by 'A')
!OUTPUT_FILE: fused_prefuse_multiple.vidjil
!LAUNCH: python3 ../../fuse.py $FUSE_OPTIONS --pre "igh-to-trg.sh -l IGK && script_a.py" ../../../algo/tests/data/results-two-clones-1-2.vidjil ../../../algo/tests/data/results-two-clones-1-2.vidjil -o fused_prefuse_multiple.vidjil

$ No more reads IGH 
j0: reads.germline.IGH
$ New reads IGK 
j:  reads.germline.IGK: [950, 950]
$ Correct new germline for clone 0
j: clones[0].germline: IGK
$ Correct new germline for clone 1
j: clones[1].germline: IGK

$ Value added by script A
j: samples.original_names[0]: A
j: samples.original_names[1]: A

## With multiple prefuse call; but with a fail inside script; so process should fail
!EXIT_CODE: 1
!LAUNCH: python3 ../../fuse.py $FUSE_OPTIONS --pre "igh-to-trg.sh -l IGK && script_fail.py && script_a.py" ../../../algo/tests/data/results-two-clones-1-2.vidjil ../../../algo/tests/data/results-two-clones-1-2.vidjil -o fused_prefuse_multiple.vidjil


### Restore inital defs.py file
!EXIT_CODE: 0
!LAUNCH: mv defs.py.tmp ../../defs.py



