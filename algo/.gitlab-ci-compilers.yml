.install-algo-dependencies:
  before_script:
    - apt-get update
    - apt-get install -y time valgrind python2.7 python3 wget tar make zlib1g-dev
    - ln -sf /usr/bin/python2.7 /usr/bin/python

.testing-compilers:
  extends: .install-algo-dependencies
  stage: multiple_tests
  tags:
    - cidocker
  script:
    - $CXX --version
    - make demo data germline
    - make -C algo clean
    - make -C algo CXX=$CXX CC=$CC unit
    - make -C algo CXX=$CXX CC=$CC should
    - make -C algo CXX=$CXX CC=$CC valgrind_unit
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never               # To prevent detached pipelines
    - if: '$CI_COMMIT_BRANCH =~ /^feature-.*a.*\/release$/'
      when: always
    - if: '$CI_COMMIT_BRANCH =~ /^feature-.*a/'
      when: manual

.installing-compiler:
  before_script:
    - apt-get update
    - apt-get install -y time valgrind python3 $COMPILER_PKG-$VERSION zlib1g-dev make wget tar python2.7
    - ln -sf /usr/bin/python2.7 /usr/bin/python
    - export CXX=${COMPILER_CPP}-$VERSION
    - export CC=${COMPILER_C}-$VERSION

.testing-gcc:
  extends: .testing-compilers
  image: gcc:$GCC_VERSION
  variables:
    CXX: g++
    CC: gcc
.testing-clang:
  image: silkeh/clang:$CLANG_VERSION
  variables:
    CXX: clang++
    CC: clang
  extends:
    - .testing-compilers

.installing-testing-gcc:
  variables:
    COMPILER_PKG: "g++"
    COMPILER_CPP: "g++"
    COMPILER_C: "gcc"
    VERSION: $GCC_VERSION
  extends:
    - .testing-compilers
    - .installing-compiler
    
test_gcc48:
  image: debian:8-slim
  variables:
    GCC_VERSION: "4.8"
  extends:
    - .installing-testing-gcc

test_gcc:
  extends:
    - .testing-gcc
  parallel:
    matrix:
      - GCC_VERSION: ["5.3", "6.3", "7.3", "8", "9", "10", "11"]

test_clang:
  extends:
    - .testing-clang
  parallel:
    matrix:
      - CLANG_VERSION: ["4", "6", "7", "11", "12"]
