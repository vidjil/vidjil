version: '3.8'

# ## Docker-compose
# You can set variables (as $MYSQL_ROOT_PASSWORD) values inside .env file
# Path variable and folders trees can be modified to your liking.

services:
    mysql:
        image: mysql:5.7
        env_file:
            - '.env'
        volumes:
            - ./mysql/:/docker-entrypoint-initdb.d/
            - $VOLUME_PATH/mysql:/var/lib/mysql
        healthcheck:
          test: "mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD"
          timeout: 20s
          retries: 10
    uwsgi:
        image: vidjil/server:latest
        env_file:
            - '.env'
        command: bash /entrypoints/uwsgi-entrypoint.sh
        volumes_from:
            - fuse
        depends_on:
            mysql:
              condition: service_healthy
            fuse:
              condition: service_started
            postfix:
              condition: service_started
        links:
            - mysql:mysql
            - fuse:fuse
            - postfix:postfix
    fuse:
        image: vidjil/server:latest
        command: bash /entrypoints/fuse-entrypoint.sh
        env_file:
            - '.env'
        volumes:
            - $VOLUME_PATH/databases:/usr/share/vidjil/server/web2py/applications/vidjil/databases
            - $VOLUME_PATH/result/results:/mnt/result/results
            - $VOLUME_PATH/result/tmp:/mnt/result/tmp
            - $VOLUME_PATH/upload/uploads:/mnt/upload/uploads
            - $VOLUME_PATH/log:/var/vidjil
            - $VOLUME_PATH/log/uwsgi:/var/log/uwsgi
            - $VOLUME_PATH/backup:/mnt/backup
            - ./vidjil-server/conf:/etc/vidjil
            - ./vidjil-server/scripts:/entrypoints
            - ../germline:/usr/share/vidjil/germline
    nginx:
        image: vidjil/client:latest
        env_file:
            - '.env'
        ports:
            - "80:80"
            - "443:443"
        command: bash /entrypoints/nginx-entrypoint.sh
        volumes:
            - $VOLUME_PATH/log/nginx:/var/log/nginx
            - $VOLUME_PATH/certs:/etc/letsencrypt/well-known
            - ./vidjil-client/ssl:/etc/nginx/ssl
            - ./vidjil-client/conf:/etc/vidjil
            - ../germline:/usr/share/vidjil/germline
            - ../browser/js/germline.js:/usr/share/vidjil/browser/js/germline.js

    workers:
        image: vidjil/server:latest
        env_file:
            - '.env'
        command: bash /entrypoints/workers-entrypoint.sh
        volumes_from:
            - uwsgi
        depends_on:
            uwsgi:
              condition: service_started
            mysql:
              condition: service_healthy
        links:
            - mysql
            - postfix
    backup:
        build: ./backup
        volumes_from:
            - uwsgi
        volumes:
            - ./backup/conf:/etc/backup
        depends_on:
            - mysql
        links:
            - mysql
            - uwsgi:uwsgi
    reporter:
        build: ./reporter
        image: reporter:latest
        volumes_from:
            - uwsgi
        volumes:
            - ./reporter/code:/opt/reporter
        depends_on:
            uwsgi:
              condition: service_started
        links:
            - uwsgi:uwsgi
    postfix:
        image: catatnight/postfix
        env_file:
            - '.env'
        expose:
            - 587
        volumes:
            - ./postfix/ssl:/etc/postfix/certs

